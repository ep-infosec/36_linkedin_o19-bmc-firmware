#!/bin/bash

DEVMEM=/sbin/devmem
WDT2_TMOUT_STAT_REG_OFFSET=0x30
WDT2_CLR_TMOUT_STAT_REG_OFFSET=0x34

WDT2_TMOUT_STAT_REG_2ND_BOOT_CODE=2
WDT2_CLR_TMOUT_STATUS=0x1

SCU88_MULTI_FUNC_CTRL3=0x88
SCU88_MULTI_FUNC_CTRL3_ENA_ROMCS1=0x1000000

scu_addr() {
    echo $((0x1E6E2000 + $1))
}

wdt_addr() {
    echo $((0x1E785000 + $1))
}

if [ $# -lt 2 ]; then
  echo "Please provide the flash id and the full image path"
  exit -1
fi

update_flash="$1"
img_file="$2"

if [ $update_flash == "0" ]; then
  dev="/dev/mtd5"
elif [ $update_flash == "1" ]; then
  dev="/dev/mtd11"
else
  echo "Flash id must be 0 or 1"
  exit -1
fi

if [ ! -f $img_file ]; then
  echo "$img_file does not exist"
  exit -1
fi

scu88=$(scu_addr $SCU88_MULTI_FUNC_CTRL3)

stat_reg=$(wdt_addr $WDT2_TMOUT_STAT_REG_OFFSET)

clr_stat_reg=$(wdt_addr $WDT2_CLR_TMOUT_STAT_REG_OFFSET)

boot=$($DEVMEM $stat_reg)
boot=$((boot&$WDT2_TMOUT_STAT_REG_2ND_BOOT_CODE))

if [ $boot -eq $WDT2_TMOUT_STAT_REG_2ND_BOOT_CODE ]; then
  boot_flash="1"

  if [ $update_flash == "1" ]; then
    echo "  Flash1 can only be updated from flash0"
    exit -1
  fi

  echo "  Clearing WDog Timeout Status Reg"
  $DEVMEM $clr_stat_reg w $WDT2_CLR_TMOUT_STATUS
else
  boot_flash="0"
fi

if [ $update_flash != $boot_flash ]; then
  echo "  Enabling flash rom CS1"
  $DEVMEM $scu88 w $SCU88_MULTI_FUNC_CTRL3_ENA_ROMCS1
fi

echo "  Updating flash$update_flash from flash$boot_flash with file $img_file"
echo "  This will take a few minutes ..."

if flashcp -v $img_file $dev ; then
  echo "  BMC on flash$update_flash updated successfully."
else
  echo "  Failed to update flash$update_flash BMC"
  exit -1
fi
