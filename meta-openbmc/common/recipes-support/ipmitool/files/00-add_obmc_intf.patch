diff -ur ipmitool/configure.ac ipmitool_new/configure.ac
--- ipmitool/configure.ac	2017-07-11 08:51:37.523621035 +0800
+++ ipmitool_new/configure.ac	2017-07-11 08:51:34.319667289 +0800
@@ -64,6 +64,7 @@
 xenable_intf_open=yes
 #xenable_intf_serial=yes
 xenable_intf_usb=no
+xenable_intf_obmc=yes
 xenable_ipmishell=yes
 
 dnl set some things so we build with GNU tools on Solaris
@@ -222,6 +223,22 @@
 	IPMITOOL_INTF_LIB="$IPMITOOL_INTF_LIB usb/libintf_usb.la"
 fi
 
+dnl enable Facebook OpenBMC interface
+AC_ARG_ENABLE([intf-obmc],
+	[AC_HELP_STRING([--enable-intf-obmc],
+			[enable Facebook OpenBMC interface [default=auto]])],
+		[xenable_intf_obmc=$enableval],
+		[xenable_intf_obmc=yes])
+if test "x$xenable_intf_obmc" = "xstatic" || test "x$xenable_intf_obmc" = "xplugin"; then
+   xenable_intf_obmc=yes
+fi
+if test "x$xenable_intf_obmc" = "xyes"; then
+	AC_DEFINE(IPMI_INTF_OBMC, [1], [Define to 1 to enable OpenBMC interface.])
+	AC_SUBST(INTF_OBMC, [obmc])
+	AC_SUBST(INTF_OBMC_LIB, [libintf_obmc.la])
+	IPMITOOL_INTF_LIB="$IPMITOOL_INTF_LIB obmc/libintf_obmc.la"
+fi
+
 dnl enable IPMIv2.0 RMCP+ LAN interface
 AC_ARG_ENABLE([intf-lanplus],
 	[AC_HELP_STRING([--enable-intf-lanplus],
@@ -664,6 +681,7 @@
 		src/plugins/imb/Makefile
 		src/plugins/bmc/Makefile
 		src/plugins/usb/Makefile
+		src/plugins/obmc/Makefile
 		src/plugins/lipmi/Makefile
 		src/plugins/serial/Makefile
 		src/plugins/dummy/Makefile])
@@ -681,6 +699,7 @@
 AC_MSG_RESULT([  imb     : $xenable_intf_imb])
 AC_MSG_RESULT([  bmc     : $xenable_intf_bmc])
 AC_MSG_RESULT([  usb     : $xenable_intf_usb])
+AC_MSG_RESULT([  obmc    : $xenable_intf_obmc])
 AC_MSG_RESULT([  lipmi   : $xenable_intf_lipmi])
 AC_MSG_RESULT([  serial  : $xenable_intf_serial])
 AC_MSG_RESULT([  dummy   : $xenable_intf_dummy])
diff -ur ipmitool/src/plugins/ipmi_intf.c ipmitool_new/src/plugins/ipmi_intf.c
--- ipmitool/src/plugins/ipmi_intf.c	2017-07-11 08:51:37.531620918 +0800
+++ ipmitool_new/src/plugins/ipmi_intf.c	2017-07-11 09:43:57.019923569 +0800
@@ -1,21 +1,21 @@
 /*
  * Copyright (c) 2003 Sun Microsystems, Inc.  All Rights Reserved.
- * 
+ *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
- * 
+ *
  * Redistribution of source code must retain the above copyright
  * notice, this list of conditions and the following disclaimer.
- * 
+ *
  * Redistribution in binary form must reproduce the above copyright
  * notice, this list of conditions and the following disclaimer in the
  * documentation and/or other materials provided with the distribution.
- * 
+ *
  * Neither the name of Sun Microsystems, Inc. or the names of
  * contributors may be used to endorse or promote products derived
  * from this software without specific prior written permission.
- * 
+ *
  * This software is provided "AS IS," without a warranty of any kind.
  * ALL EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES,
  * INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A
@@ -89,8 +89,15 @@
 #ifdef IPMI_INTF_USB
 extern struct ipmi_intf ipmi_usb_intf;
 #endif
+#ifdef IPMI_INTF_OBMC
+extern struct ipmi_intf ipmi_obmc_intf;
+#endif
 
 struct ipmi_intf * ipmi_intf_table[] = {
+#ifdef IPMI_INTF_OBMC
+	// first interface as default interface
+	&ipmi_obmc_intf,
+#endif
 #ifdef IPMI_INTF_OPEN
 	&ipmi_open_intf,
 #endif
@@ -482,7 +489,7 @@
 	/* check if request size is not specified */
 	if (!size) {
 		/*
-		 * The IPMB standard overall message length for ‘non -bridging’
+		 * The IPMB standard overall message length for ï¿½non -bridgingï¿½
 		 * messages is specified as 32 bytes, maximum, including slave
 		 * address. This sets the upper limit for typical IPMI messages.
 		 * With the exception of messages used for bridging messages to
@@ -539,7 +546,7 @@
 	/* check if response size is not specified */
 	if (!size) {
 		/*
-		 * The IPMB standard overall message length for ‘non -bridging’
+		 * The IPMB standard overall message length for ï¿½non -bridgingï¿½
 		 * messages is specified as 32 bytes, maximum, including slave
 		 * address. This sets the upper limit for typical IPMI messages.
 		 * With the exception of messages used for bridging messages to
diff -ur ipmitool/src/plugins/Makefile.am ipmitool_new/src/plugins/Makefile.am
--- ipmitool/src/plugins/Makefile.am	2017-07-11 08:51:37.531620918 +0800
+++ ipmitool_new/src/plugins/Makefile.am	2017-07-11 08:51:34.327667174 +0800
@@ -32,8 +32,8 @@
 
 AM_CPPFLAGS			= -I$(top_srcdir)/include
 
-SUBDIRS				= @INTF_LAN@ @INTF_LANPLUS@ @INTF_OPEN@ @INTF_LIPMI@ @INTF_IMB@ @INTF_BMC@ @INTF_FREE@ @INTF_SERIAL@ @INTF_DUMMY@ @INTF_USB@
-DIST_SUBDIRS			= lan lanplus open lipmi imb bmc free serial dummy usb
+SUBDIRS				= @INTF_LAN@ @INTF_LANPLUS@ @INTF_OPEN@ @INTF_LIPMI@ @INTF_IMB@ @INTF_BMC@ @INTF_FREE@ @INTF_SERIAL@ @INTF_DUMMY@ @INTF_USB@ @INTF_OBMC@
+DIST_SUBDIRS			= lan lanplus open lipmi imb bmc free serial dummy usb obmc
 
 noinst_LTLIBRARIES		= libintf.la
 libintf_la_SOURCES		= ipmi_intf.c
Only in ipmitool_new/src/plugins: obmc
