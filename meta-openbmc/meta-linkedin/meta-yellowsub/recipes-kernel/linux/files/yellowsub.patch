diff --git a/arch/arm/mach-aspeed/Kconfig b/arch/arm/mach-aspeed/Kconfig
index f37d9da0baa1..ea4d52875941 100644
--- a/arch/arm/mach-aspeed/Kconfig
+++ b/arch/arm/mach-aspeed/Kconfig
@@ -227,6 +227,15 @@ config YOSEMITE
         select EGFX_IRQ
         bool "Facebook Yosemite"
 
+config DELTAPOWER
+        bool "LinkedIn Delta Power"
+
+config YELLOWSUB
+        select USB_ARCH_HAS_EHCI
+        select AST_UART_SDMA
+        select EGFX_IRQ
+        bool "Linkedin Yellowsub"
+
 config FBPLATFORM1
         bool "Facebook Platform1"
 
@@ -280,7 +289,7 @@ config AST_CONSOLE_UART_BASE
     hex "Console UART base address"
     default 0x1e783000 if CMM
     default 0x1e784000 if YAMP
-    default 0x1e78e000 if WEDGE || WEDGE100
+    default 0x1e78e000 if WEDGE || WEDGE100 || DELTAPOWER
     default 0x1e783000 if MINIPACK
     default 0x1e784000 if FBTP
     default 0x1e784000 if FBY2
diff --git a/arch/arm/mach-aspeed/ast.c b/arch/arm/mach-aspeed/ast.c
index d69f30a443c8..d78cbea584c0 100644
--- a/arch/arm/mach-aspeed/ast.c
+++ b/arch/arm/mach-aspeed/ast.c
@@ -123,7 +123,7 @@ static const char * const ast_dt_match[] = {
 
 void ast_restart(enum reboot_mode mode, const char *cmd)
 {
-#if defined(CONFIG_YOSEMITE) || defined(CONFIG_FBTP) || defined(CONFIG_FBTTN) || defined(CONFIG_LIGHTNING) ||  defined(CONFIG_FBY2) || defined(CONFIG_PWNEPTUNE) || defined(CONFIG_MINILAKETB)
+#if defined(CONFIG_YOSEMITE) || defined(CONFIG_FBTP) || defined(CONFIG_FBTTN) || defined(CONFIG_LIGHTNING) ||  defined(CONFIG_FBY2) || defined(CONFIG_PWNEPTUNE) || defined(CONFIG_MINILAKETB) || defined(CONFIG_YELLOWSUB)
 	ast_wdt_reset_soc();
 #else
 	ast_wdt_reset_full();
diff --git a/arch/arm/plat-aspeed/Makefile b/arch/arm/plat-aspeed/Makefile
index 55d9a0d6e11a..4dbad4950377 100644
--- a/arch/arm/plat-aspeed/Makefile
+++ b/arch/arm/plat-aspeed/Makefile
@@ -87,6 +87,16 @@ ifeq ($(CONFIG_YOSEMITE), y)
   PLATFB = 1
 endif
 
+ifeq ($(CONFIG_DELTAPOWER), y)
+  obj-y += dev-uart.o
+  PLATFB = 1
+endif
+
+ifeq ($(CONFIG_YELLOWSUB), y)
+  obj-y += dev-uart.o  dev-i2c.o
+  PLATFB = 1
+endif
+
 ifeq ($(CONFIG_PWNEPTUNE), y)
   obj-y += dev-uart-fbtp.o dev-i2c.o
   PLATFB = 1
diff --git a/arch/arm/plat-aspeed/dev-eth.c b/arch/arm/plat-aspeed/dev-eth.c
index 7e28d004a6f7..f9c934e98f11 100644
--- a/arch/arm/plat-aspeed/dev-eth.c
+++ b/arch/arm/plat-aspeed/dev-eth.c
@@ -45,7 +45,7 @@
 	defined(CONFIG_FBTTN) || defined(CONFIG_FBY2) || \
 	defined(CONFIG_YOSEMITE) || defined(CONFIG_MINIPACK) || \
 	defined(CONFIG_MINILAKETB) || defined(CONFIG_YAMP) || \
-	defined(CONFIG_GALAXY100)
+	defined(CONFIG_GALAXY100) || defined(CONFIG_YELLOWSUB)
 #define DRVNAME "ftgmac100"
 #else
 #define DRVNAME "ast_gmac"
diff --git a/arch/arm/plat-aspeed/dev-i2c.c b/arch/arm/plat-aspeed/dev-i2c.c
index 36892b43f1fd..385ea29171c5 100644
--- a/arch/arm/plat-aspeed/dev-i2c.c
+++ b/arch/arm/plat-aspeed/dev-i2c.c
@@ -879,7 +879,7 @@ static struct i2c_board_info ast_i2c_board_info_13[] __initdata = {
 };
 
 //end for FBTTN
-#elif defined(CONFIG_YOSEMITE)
+#elif defined(CONFIG_YOSEMITE) || defined(CONFIG_YELLOWSUB)
 
 //Under I2C Dev 0
 static struct i2c_board_info ast_i2c_board_info_0[] __initdata = {
@@ -1251,7 +1251,7 @@ void __init ast_add_device_i2c(void)
 	i2c_register_board_info(13, ast_i2c_board_info_13,
 			ARRAY_SIZE(ast_i2c_board_info_13));
 }
-#elif defined(CONFIG_YOSEMITE)
+#elif defined(CONFIG_YOSEMITE) || defined(CONFIG_YELLOWSUB)
 void __init ast_add_device_i2c(void)
 {
 	/* I2C Multi-Pin */
diff --git a/arch/arm/plat-aspeed/dev-spi-fb.c b/arch/arm/plat-aspeed/dev-spi-fb.c
index acde30e08b00..6cde3972c1d2 100644
--- a/arch/arm/plat-aspeed/dev-spi-fb.c
+++ b/arch/arm/plat-aspeed/dev-spi-fb.c
@@ -57,10 +57,9 @@ static u32 ast_spi_calculate_divisor(u32 max_speed_hz)
  * FMC: Firmware SPI Memory Controller
  * SPI0, SPI1: SPI Flash Controller
  */
-
 static struct ast_spi_driver_data ast_fmc_driver_data = {
-	.get_div = ast_spi_calculate_divisor,
-	.num_chipselect = AST_FMC_CS_NUM,
+    .get_div = ast_spi_calculate_divisor,
+    .num_chipselect = 2,
 };
 
 static struct ast_spi_driver_data ast_spi0_driver_data = {
@@ -173,7 +172,7 @@ static struct platform_device ast_fmc_device = {
 };
 
 static struct platform_device ast_spi0_device = {
-#if defined CONFIG_WEDGE100 || defined CONFIG_MINIPACK
+#if defined CONFIG_WEDGE100 || defined CONFIG_MINIPACK || defined(CONFIG_YELLOWSUB)
           .name           = "ast-spi",
           .id             = 1,
 #else
@@ -281,23 +280,53 @@ static struct mtd_partition ast_primary_partitions[] = {
 		.name       = "flash0",
 		.offset     = 0,                   /* From 0 */
 		.size       = MTDPART_SIZ_FULL,    /* full size */
-	},
+    },
+};
+
+static struct mtd_partition ast_legacy_partition1[] = {
+        {
+                .name       = "u-boot",
+                .offset     = 0,        /* From 0 */
+                .size       = 0x60000,  /* Size 384K */
+                .mask_flags = MTD_WRITEABLE,
+        }, {
+                .name       = "env",
+                .offset     = MTDPART_OFS_APPEND,  /* From 384K */
+                .size       = 0x20000,  /* Size 128K, two sectors */
+        }, {
+                .name       = "kernel",
+                .offset     = MTDPART_OFS_APPEND,  /* From 512K */
+                .size       = 0x400000, /* Size 4M */
+        }, {
+               .name       = "rootfs",
+                .offset     = MTDPART_OFS_APPEND,  /* From 4.5M */
+                .size       = 0x1780000, /* Size 23.5M */
+        }, {
+                .name       = "data1",
+                .offset     = MTDPART_OFS_APPEND,
+                .size       = MTDPART_SIZ_FULL,
+       },
+        {
+                .name       = "flash1",
+                .offset     = 0,        /* From 0 */
+                .size       = MTDPART_SIZ_FULL,  /* full size */
+        },
 };
 
 static struct mtd_partition ast_rom_partitions[] = {
-	{
-		.name       = "rom",               /* ROM (SPL), recovery U-boot */
-		.offset     = 0,                   /* From 0 */
-		.size       = 0x60000,             /* Size 384K */
-		.mask_flags = MTD_WRITEABLE,
-	}, {
-		.name       = "envro",             /* RO U-Boot NVRAM */
-		.offset     = MTDPART_OFS_APPEND,  /* From 384K */
-		.size       = 0x20000,             /* Size 128K, two sectors */
-	}, {
-		.name       = "u-bootro",          /* RO U-boot */
-		.offset     = MTDPART_OFS_APPEND,  /* From 512K */
-		.size       = 0x60000,             /* Size 384K */
+    {
+        .name       = "rom",               /* ROM (SPL), recovery U-boot */
+        .offset     = 0,                   /* From 0 */
+        .size       = 0x60000,             /* Size 384K */
+        .mask_flags = MTD_WRITEABLE,
+    }, {
+        .name       = "envro",             /* RO U-Boot NVRAM */
+        .offset     = MTDPART_OFS_APPEND,  /* From 384K */
+        .size       = 0x20000,             /* Size 128K, two sectors */
+    }, {
+        .name       = "u-bootro",          /* RO U-boot */
+        .offset     = MTDPART_OFS_APPEND,  /* From 512K */
+        .size       = 0x60000,             /* Size 384K */
 	}, {
 		.name       = "fitro",             /* RO kernel, rootfs */
 		.offset     = MTDPART_OFS_APPEND,  /* From 896K */
@@ -373,9 +402,15 @@ static struct flash_platform_data ast_legacy_platform_data = {
 	.parts      = ast_legacy_partitions,
 };
 
+static struct flash_platform_data ast_legacy1_platform_data = {
+        .type       = "mx25l25635e",
+        .nr_parts   = ARRAY_SIZE(ast_legacy_partition1),
+        .parts      = ast_legacy_partition1,
+};
+
 /* The ROM platform data is FMC.0 (CS0) */
 static struct flash_platform_data ast_rom_platform_data = {
-	.type       = "mx25l25635e",
+    .type       = "mx25l25635e",
 	.nr_parts   = ARRAY_SIZE(ast_rom_partitions),
 	.parts      = ast_rom_partitions,
 };
@@ -459,9 +494,17 @@ static struct spi_board_info ast_single_flash_fmc_devices[] = {
 		.platform_data  = &ast_legacy_platform_data,
 		.chip_select    = 0,
 		.max_speed_hz   = 50 * 1000 * 1000,
-		.bus_num    		= 0,
-		.mode 			    = SPI_MODE_0,
+        .bus_num    		= 0,
+        .mode 			    = SPI_MODE_0,
 	},
+    {
+        .modalias       = "m25p80",
+        .platform_data  = &ast_legacy1_platform_data,
+        .chip_select    = 1,
+        .max_speed_hz   = 50 * 1000 * 1000,
+        .bus_num        = 0,
+        .mode           = SPI_MODE_0,
+    },
 };
 
 #ifdef CONFIG_MINIPACK
@@ -474,10 +517,10 @@ static struct spi_eeprom m95m02 = {
 #endif
 
 #if defined(CONFIG_FBTP)  || defined (CONFIG_WEDGE100) || defined (CONFIG_PWNEPTUNE) || \
-    defined(CONFIG_MINIPACK)
+    defined(CONFIG_MINIPACK) || defined(CONFIG_YELLOWSUB)
 static struct spi_board_info ast_spi0_devices[] = {
     {
-#if defined(CONFIG_WEDGE100) || defined(CONFIG_MINIPACK)
+#if defined(CONFIG_WEDGE100) || defined(CONFIG_MINIPACK) || defined(CONFIG_YELLOWSUB)
         .modalias           = "spidev",
         .chip_select        = 0,
         .max_speed_hz       = 33 * 1000 * 1000,
@@ -566,9 +609,9 @@ void __init ast_add_device_spi(void)
   } else {
     spi_register_board_info(ast_single_flash_fmc_devices, ARRAY_SIZE(ast_single_flash_fmc_devices));
   }
-#if defined(CONFIG_FBTP) || defined(CONFIG_WEDGE100) || defined(CONFIG_PWNEPTUNE)
-	platform_device_register(&ast_spi0_device);
-	spi_register_board_info(ast_spi0_devices, ARRAY_SIZE(ast_spi0_devices));
+#if defined(CONFIG_FBTP) || defined(CONFIG_WEDGE100) || defined(CONFIG_PWNEPTUNE) || defined(CONFIG_YELLOWSUB)
+    platform_device_register(&ast_spi0_device);
+    spi_register_board_info(ast_spi0_devices, ARRAY_SIZE(ast_spi0_devices));
 #elif defined(CONFIG_MINIPACK)
 	platform_device_register(&ast_spi0_device);
 	spi_register_board_info(ast_spi0_devices, ARRAY_SIZE(ast_spi0_devices));
diff --git a/arch/arm/plat-aspeed/dev-uart.c b/arch/arm/plat-aspeed/dev-uart.c
index 78123f784287..0c34d62d0435 100644
--- a/arch/arm/plat-aspeed/dev-uart.c
+++ b/arch/arm/plat-aspeed/dev-uart.c
@@ -195,7 +195,7 @@ static struct plat_serial8250_port ast_uart_data[] = {
 /* Without this, tty offset might change for others */
 #if defined(CONFIG_YOSEMITE) || defined(CONFIG_FBTP) ||  defined(CONFIG_FBY2) || defined(CONFIG_PWNEPTUNE) || \
     defined(CONFIG_MINIPACK) || defined(CONFIG_MINILAKETB) || \
-    defined(CONFIG_YAMP)
+    defined(CONFIG_YAMP) || defined(CONFIG_YELLOWSUB)
 	{
 		.mapbase	= AST_UART2_BASE,
 		.irq		= IRQ_UART2,
@@ -372,7 +372,7 @@ struct platform_device ast_uart_device = {
 void __init ast_add_device_uart(void)
 {
 #if defined(CONFIG_ARCH_AST1010)
-#elif defined(CONFIG_YOSEMITE)
+#elif defined(CONFIG_YOSEMITE) || defined(CONFIG_YELLOWSUB)
 	ast_scu_multi_func_uart(1);
 	ast_scu_multi_func_uart(2);
 	ast_scu_multi_func_uart(3);
diff --git a/drivers/hwmon/pmbus/lm25066.c b/drivers/hwmon/pmbus/lm25066.c
index a26b1d1d9514..b769f2e030f5 100644
--- a/drivers/hwmon/pmbus/lm25066.c
+++ b/drivers/hwmon/pmbus/lm25066.c
@@ -43,6 +43,10 @@ enum chips { lm25056, lm25063, lm25066, lm5064, lm5066 };
 #define LM25066_READ_AVG_PIN		0xdf
 
 #define LM25066_DEV_SETUP_CL		(1 << 4)	/* Current limit */
+#define LM25066_OP_REG_ADDR     PMBUS_OPERATION
+#define LM25066_OP_SHUTDOWN_CMD 0x0
+#define LM25066_OP_POWERON_CMD  PB_OPERATION_CONTROL_ON
+#define LM25066_OP_ARG_SHUTDOWN 1
 
 /* LM25056 only */
 
@@ -99,10 +103,12 @@ static struct __coeff lm25066_coeff[5][PSC_NUM_CLASSES + 2] = {
 		},
 		[PSC_VOLTAGE_OUT] = {
 			.m = 22070,
+			.b = -1800,
 			.R = -2,
 		},
 		[PSC_CURRENT_IN] = {
-			.m = 13661,
+			.m = 9153,
+			.b = -5200,
 			.R = -2,
 		},
 		[PSC_CURRENT_IN_L] = {
@@ -110,7 +116,9 @@ static struct __coeff lm25066_coeff[5][PSC_NUM_CLASSES + 2] = {
 			.R = -2,
 		},
 		[PSC_POWER] = {
-			.m = 736,
+			/* Rs = 0.67,   m*Rs=493 */
+			.m = 493,
+			.b = -3300,
 			.R = -2,
 		},
 		[PSC_POWER_L] = {
@@ -214,6 +222,7 @@ static struct __coeff lm25066_coeff[5][PSC_NUM_CLASSES + 2] = {
 struct lm25066_data {
 	int id;
 	u16 rlimit;			/* Maximum register value */
+//    int shutdown_state;
 	struct pmbus_driver_info info;
 };
 
@@ -283,6 +292,9 @@ static int lm25066_read_word_data(struct i2c_client *client, int page, int reg)
 	case PMBUS_VIRT_READ_PIN_MAX:
 		ret = pmbus_read_word_data(client, 0, LM25066_READ_PIN_PEAK);
 		break;
+    case PMBUS_STATUS_WORD:
+        ret = pmbus_read_word_data(client, 0, PMBUS_STATUS_WORD);
+        break;
 	case PMBUS_VIRT_RESET_PIN_HISTORY:
 		ret = 0;
 		break;
@@ -363,6 +375,65 @@ static int lm25056_read_byte_data(struct i2c_client *client, int page, int reg)
 	return ret;
 }
 
+static int lm25066_read_byte_data(struct i2c_client *client, int page, int reg)
+{
+        int ret;
+
+        switch (reg) {
+                case PMBUS_PAGE:
+                case PMBUS_OPERATION:
+                case PMBUS_CLEAR_FAULTS:
+                case PMBUS_CAPABILITY:
+                case PMBUS_VOUT_MODE:
+                case PMBUS_FAN_CONFIG_12:
+                case PMBUS_STATUS_BYTE:
+                case PMBUS_STATUS_VOUT:
+                case PMBUS_STATUS_IOUT:
+                case PMBUS_STATUS_INPUT:
+                case PMBUS_STATUS_TEMPERATURE:
+                case PMBUS_STATUS_CML:
+                case PMBUS_STATUS_OTHER:
+                case PMBUS_STATUS_MFR_SPECIFIC:
+                case PMBUS_STATUS_FAN_12:
+                        ret = pmbus_read_byte_data(client, page, reg);
+                        return ret;
+                default:
+                        return -ENXIO;
+        }
+        return ret;
+}
+
+static int lm25066_write_byte(struct i2c_client *client, int page, u8 value)
+{
+        int ret;
+
+        switch (value) {
+                case PMBUS_PAGE:
+                case PMBUS_OPERATION:
+                case PMBUS_CLEAR_FAULTS:
+                        ret = pmbus_write_byte(client, page, value);
+                        return ret;
+                default:
+                        return -ENXIO;
+        }
+}
+
+static int lm25066_write_byte_data(struct i2c_client *client, int page, int reg,
+                                   u8 value)
+{
+        int ret;
+
+        switch (reg) {
+                case PMBUS_PAGE:
+                case PMBUS_OPERATION:
+                case PMBUS_CLEAR_FAULTS:
+                        ret = pmbus_write_byte_data(client, page, reg, value);
+                        return ret;
+                default:
+                        return -ENXIO;
+        }
+}
+
 static int lm25066_write_word_data(struct i2c_client *client, int page, int reg,
 				   u16 word)
 {
@@ -425,6 +496,121 @@ static int lm25066_write_word_data(struct i2c_client *client, int page, int reg,
 	return ret;
 }
 
+#if 0
+static ssize_t lm25066_shutdown_show(struct device *dev,
+        struct device_attribute *attr, char *buf)
+{
+        struct i2c_client *client = to_i2c_client(dev);
+        const struct pmbus_driver_info *info = pmbus_get_driver_info(client);
+        struct lm25066_data *data = to_lm25066_data(info);
+        int len = 0;
+        u8 read_val = 0;
+
+        // Update shutdown state before printing out
+        read_val = lm25066_read_byte_data(client, 0, LM25066_OP_REG_ADDR);
+        // Only if the read was successful, update the status
+        if (data && (read_val >= 0))
+        {
+                if (read_val == LM25066_OP_SHUTDOWN_CMD)
+                        data->shutdown_state = 1;
+                else
+                        data->shutdown_state = 0;
+
+                len = sprintf(buf, "%d\n\nSet to 1 for shutdown LM25066\n",
+                              data->shutdown_state);
+        }
+
+  return len;
+}
+
+static int lm25066_shutdown_store(struct device *dev,
+        struct device_attribute *attr, const char *buf, size_t count)
+{
+        struct i2c_client *client = to_i2c_client(dev);
+        const struct pmbus_driver_info *info;
+        struct lm25066_data *data;
+        u8 write_value = 0;
+        long shutdown = 0;
+        int rc = 0;
+
+         if (client == NULL) {
+             return -ENXIO;
+        }
+
+        info = pmbus_get_driver_info(client);
+        data = to_lm25066_data(info);
+
+        if (buf == NULL) {
+                return -ENXIO;
+        }
+
+        rc = kstrtol(buf, 10, &shutdown);
+        if (rc != 0)    {
+                // Parsing was not successful. But will return as "count" bytes processed
+                // without doing anything, in order to give the control back to
+                // the caller / shell
+                return count;
+        }
+        // We will shutdown LM25066 only if the user input is exactly "1"
+        if (shutdown == (long)LM25066_OP_ARG_SHUTDOWN) {
+                write_value = LM25066_OP_SHUTDOWN_CMD;
+        } else {
+                write_value = LM25066_OP_POWERON_CMD;
+        }
+
+        rc = lm25066_write_byte_data(client, 0,
+                                     LM25066_OP_REG_ADDR, write_value);
+
+  // Write successful. Update driver state
+        if (data && (rc == 0)) {
+                if (write_value == LM25066_OP_SHUTDOWN_CMD)
+                        data->shutdown_state = 1;
+                else
+                        data->shutdown_state = 0;
+        }
+
+        // No matter successful or failure, we processed all input characters
+        // So, return the number of input chars processed to finish the sysfs
+        // access.
+        return count;
+}
+
+static DEVICE_ATTR(shutdown, S_IRUGO | S_IWUSR,
+                   lm25066_shutdown_show,
+                   lm25066_shutdown_store);
+
+static struct attribute *shutdown_attrs[] = {
+                                              &dev_attr_shutdown.attr,
+                                              NULL
+                                            };
+static struct attribute_group control_attr_group = {
+                                                     .name = "control",
+                                                     .attrs = shutdown_attrs,
+                                                   };
+
+static int lm25066_register_shutdown(struct i2c_client *client,
+                                     const struct i2c_device_id *id)
+{
+  return sysfs_create_group(&client->dev.kobj,
+                                                                                                                &control_attr_group);
+}
+
+static void lm25066_remove_shutdown(struct i2c_client *client)
+{
+        sysfs_remove_group(&client->dev.kobj,
+                                                                                 &control_attr_group);
+        return;
+}
+#endif
+
+static int lm25066_remove(struct i2c_client *client)
+{
+        // First, remove sysfs stub for shutdown control
+//        lm25066_remove_shutdown(client);
+        // Finally, remove what pmbus_core has added
+        return pmbus_do_remove(client);
+}
+
 static int lm25066_probe(struct i2c_client *client,
 			  const struct i2c_device_id *id)
 {
@@ -432,6 +618,9 @@ static int lm25066_probe(struct i2c_client *client,
 	struct lm25066_data *data;
 	struct pmbus_driver_info *info;
 	struct __coeff *coeff;
+    int pmbus_ret;
+//    int addon_ret;
+    int ret;
 
 	if (!i2c_check_functionality(client->adapter,
 				     I2C_FUNC_SMBUS_READ_BYTE_DATA))
@@ -471,8 +660,10 @@ static int lm25066_probe(struct i2c_client *client,
 		info->read_word_data = lm25063_read_word_data;
 		data->rlimit = 0xffff;
 	} else {
-		info->func[0] |= PMBUS_HAVE_VOUT | PMBUS_HAVE_STATUS_VOUT;
+		info->func[0] |= PMBUS_HAVE_VOUT | PMBUS_HAVE_STATUS_VOUT | PMBUS_HAVE_STATUS_IOUT;
 		info->read_word_data = lm25066_read_word_data;
+        info->read_byte_data = lm25066_read_byte_data;
+        info->write_byte = lm25066_write_byte;
 		data->rlimit = 0x0fff;
 	}
 	info->write_word_data = lm25066_write_word_data;
@@ -499,7 +690,31 @@ static int lm25066_probe(struct i2c_client *client,
 		info->m[PSC_POWER] = coeff[PSC_POWER].m;
 	}
 
-	return pmbus_do_probe(client, id, info);
+	pmbus_ret = pmbus_do_probe(client, id, info);
+    return pmbus_do_probe(client, id, info);
+
+    // On top of this, install sysfs for shutdown control and status
+//    addon_ret = lm25066_register_shutdown(client, id);
+
+//    if ((pmbus_ret == 0) && (addon_ret == 0)) {
+    if (pmbus_ret == 0) {
+        ret = 0;
+    } else {
+/*
+        // Something went wrong.
+        if (pmbus_ret == 0)
+        {
+            // Rollback pmbus dev register before bail out
+            pmbus_do_remove(client);
+            // Return the errorcode of shutdown addon installation
+            ret = addon_ret;
+        } else {
+*/
+            // Return the errorcode of pmbus device registration
+            ret = pmbus_ret;
+//        }
+    }
+    return ret;
 }
 
 static const struct i2c_device_id lm25066_id[] = {
diff --git a/drivers/i2c/busses/i2c-ast.c b/drivers/i2c/busses/i2c-ast.c
index ecaa88f62f36..bb1e85e97ae9 100644
--- a/drivers/i2c/busses/i2c-ast.c
+++ b/drivers/i2c/busses/i2c-ast.c
@@ -151,7 +151,7 @@ static u32 select_i2c_clock(struct ast_i2c_dev *i2c_dev)
   }
 #endif
 
-#ifdef CONFIG_YOSEMITE
+#ifdef CONFIG_YOSEMITE  || CONFIG_YELLOWSUB
   if (i2c_dev->ast_i2c_data->bus_clk == 1000000) {
     data = 0x77744302;
     return data;
@@ -250,7 +250,7 @@ static void ast_i2c_dev_init(struct ast_i2c_dev *i2c_dev)
 
 	/* Set AC Timing */
 #if defined(CONFIG_ARCH_AST2400)
-#ifndef CONFIG_YOSEMITE
+#if !defined(CONFIG_YOSEMITE) && !defined(CONFIG_YELLOWSUB)
 	if(i2c_dev->ast_i2c_data->bus_clk/1000 > 400) {
 		printk("high speed mode enable clk [%dkhz]\n",i2c_dev->ast_i2c_data->bus_clk/1000);
 		ast_i2c_write(i2c_dev, ast_i2c_read(i2c_dev, I2C_FUN_CTRL_REG) |
diff --git a/drivers/tty/n_tty.c b/drivers/tty/n_tty.c
index 66e257b5a5b7..dce1a6b1dbef 100644
--- a/drivers/tty/n_tty.c
+++ b/drivers/tty/n_tty.c
@@ -1706,11 +1706,17 @@ static int
 n_tty_receive_buf_common(struct tty_struct *tty, const unsigned char *cp,
 			 char *fp, int count, int flow)
 {
-	struct n_tty_data *ldata = tty->disc_data;
+	struct n_tty_data *ldata;
 	int room, n, rcvd = 0, overflow;
 
 	down_read(&tty->termios_rwsem);
 
+	ldata = tty->disc_data;
+	if (!ldata) {
+		up_read(&tty->termios_rwsem);
+		return 0;
+	}
+
 	while (1) {
 		/*
 		 * When PARMRK is set, each input char may take up to 3 chars
